//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtuosoQuery.Silverlight.Skos
{
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VirtuosoSkosSilverlight_dll {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VirtuosoSkosSilverlight_dll() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VirtuosoSkosSilverlight.VirtuosoSkosSilverlight.dll", typeof(VirtuosoSkosSilverlight_dll).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a, able, about, above, abst, accordance, according, accordingly, across, act, actually, added, adj, affected, affecting, affects, after, afterwards, again, against, ah, all, almost, alone, along, already, also, although, always, am, among, amongst, an, and, announce, another, any, anybody, anyhow, anymore, anyone, anything, anyway, anyways, anywhere, apparently, approximately, are, aren, arent, arise, around, as, aside, ask, asking, at, auth, available, away, awfully, b, back, be, became, because, become, b [rest of string was truncated]&quot;;.
        /// </summary>
        public static string enStopWordList {
            get {
                return ResourceManager.GetString("enStopWordList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT (str(?con) AS ?uri) (str(?name) AS ?broader) 
        ///WHERE { ?uriext skos:broader ?con.
        ///?con skos:prefLabel ?name}.
        /// </summary>
        public static string QueryBroader {
            get {
                return ResourceManager.GetString("QueryBroader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string QueryBroaderTransitive {
            get {
                return ResourceManager.GetString("QueryBroaderTransitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT (str(?con) AS ?uri) (str(?name) AS ?narrower) 
        ///WHERE { ?uriext skos:narrower ?con.
        ///?con skos:prefLabel ?name}.
        /// </summary>
        public static string QueryNarrower {
            get {
                return ResourceManager.GetString("QueryNarrower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to prefLabel, altLabel, scopeNote, hiddenLabel.
        /// </summary>
        public static string searchPredicates {
            get {
                return ResourceManager.GetString("searchPredicates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.w3.org/2004/02/skos/core#.
        /// </summary>
        public static string skosCore {
            get {
                return ResourceManager.GetString("skosCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en.
        /// </summary>
        public static string skosLanguage {
            get {
                return ResourceManager.GetString("skosLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://www.w3.org/2001/XMLSchema#.
        /// </summary>
        public static string xmlSchema {
            get {
                return ResourceManager.GetString("xmlSchema", resourceCulture);
            }
        }
    }
}
